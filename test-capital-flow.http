@baseUrl = http://localhost:3000/api

### Step 1: Login with admin credentials
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "phone": "+51999888777",
    "password": "admin123"
}

### Store the auth token from login response
@authToken = {{login.response.body.access_token}}

### Get all juntas
GET {{baseUrl}}/juntas
Authorization: Bearer {{authToken}}

### Step 2: Create a new Junta
# @name createJunta
POST {{baseUrl}}/juntas
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "Capital Flow Junta 1",
    "description": "Junta for testing capital flow",
    "fecha_inicio": "2024-11-01T00:00:00.000Z"
}

### Store the junta ID from create response
@juntaId = {{createJunta.response.body.id}}
@juntaId2 = 48fc8dd8-e7a6-4b8b-90ef-496bd9482bae

### Get all members of a junta
GET {{baseUrl}}/members/junta/{{juntaId2}}
Authorization: Bearer {{authToken}}

### Junta ID for delete
@juntaIdtoDelete = 790ce901-f522-444d-ba51-4abb5bad9b08


#### Delete a junta
DELETE {{baseUrl}}/juntas/{{juntaIdtoDelete}}
Authorization: Bearer {{authToken}}


### Step 3: Create a new member in the junta
# @name createMember
POST {{baseUrl}}/juntas/{{juntaId}}/members
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "full_name": "Test Capital Member",
    "document_type": "DNI",
    "document_number": "87654321",
    "role": "socio",
    "productive_activity": "Commerce",
    "birth_date": "1990-01-01",
    "phone": "987654321",
    "address": "Test Address 123",
    "join_date": "2024-11-01",
    "gender": "Masculino",
    "password": "member123",
    "beneficiary": {
        "full_name": "Test Beneficiary",
        "document_type": "DNI",
        "document_number": "12345678",
        "phone": "912345678",
        "address": "Beneficiary Address 123"
    }
}

### Store the member ID from create response
@memberId = {{createMember.response.body.id}}
@memberId2 = 3ecd5070-e48f-4d71-b2d3-377489ec0dd6

### Step 4: Verify initial junta capital (should be 0)
# @name verifyInitialCapital
GET {{baseUrl}}/juntas/{{juntaId2}}
Authorization: Bearer {{authToken}}

### Step 5: Add an acción (capital contribution)
# @name createAccion
POST {{baseUrl}}/acciones
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "juntaId": "{{juntaId2}}",
    "memberId": "{{memberId2}}",
    "type": "aporte",
    "amount": 10,
    "description": "Initial capital contribution"
}

### Step 6: Verify junta's capital after acción (should be 10000)
# @name verifyCapitalAfterAccion
GET {{baseUrl}}/juntas/{{juntaId2}}
Authorization: Bearer {{authToken}}

### Step 7: Create a personal prestamo
# @name createPersonalPrestamo
POST {{baseUrl}}/prestamos
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "juntaId": "{{juntaId2}}",
    "memberId": "{{memberId2}}",
    "amount": "24",
    "monthly_interest": "2",
    "number_of_installments": 6,
    "loan_type": "personal",
    "payment_type": "mensual",
    "reason": "Personal expenses",
    "guarantee_type": "personal",
    "guarantee_detail": "Personal guarantee",
    "form_purchased": true,
    "request_date": "2024-11-01"
}

### Store the prestamo ID from create response
@prestamoId = {{createPersonalPrestamo.response.body.id}}

### Step 8: Verify junta's capital after prestamo (should be 5000)
# @name verifyCapitalAfterPrestamo
GET {{baseUrl}}/juntas/{{juntaId2}}
Authorization: Bearer {{authToken}}

### Step 9: Add a pago (loan payment)
# @name createPago
POST {{baseUrl}}/prestamos/{{prestamoId}}/pagos
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": 50
}

### Step 10: Verify junta's capital after pago (should be 5500)
# @name verifyCapitalAfterPago
GET {{baseUrl}}/juntas/{{juntaId2}}
Authorization: Bearer {{authToken}}

### Step 11: Get all prestamos for the member
# @name getMemberPrestamos
GET {{baseUrl}}/prestamos/member/{{memberId2}}
Authorization: Bearer {{authToken}}

### Step 12: Get all acciones for the member
# @name getMemberAcciones
GET {{baseUrl}}/acciones/junta/{{juntaId2}}
Authorization: Bearer {{authToken}}

### Step 13: Get capital movements for the junta
# @name getCapitalMovements
GET {{baseUrl}}/capital/movements/junta/{{juntaIdtoDelete}}
Authorization: Bearer {{authToken}}

### Store capital movement ID for delete
@capitalMovementIdtoDelete1 = 88fc225b-7150-4516-aeec-25f4b0755419
@capitalMovementIdtoDelete2 = 01980dbc-70cd-4889-925d-f9478db2a286
@capitalMovementIdtoDelete3 = fcd1d6a9-9213-4aef-b5e6-d438f47ce74f

### Delete Capital Movements for the junta
DELETE {{baseUrl}}/capital/movements/{{capitalMovementIdtoDelete1}}
Authorization: Bearer {{authToken}}

### Delete Capital Movements for ingreso
DELETE {{baseUrl}}/capital/ingreso/{{capitalMovementIdtoDelete1}}
Authorization: Bearer {{authToken}}

### Delete Capital Movements for gasto
DELETE {{baseUrl}}/capital/gasto/:id

### Step 14: Create a negocio prestamo
# @name createNegocioPrestamo
POST {{baseUrl}}/prestamos
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "juntaId": "{{juntaId}}",
    "memberId": "{{memberId}}",
    "amount": "3000",
    "monthly_interest": "2.5",
    "number_of_installments": 6,
    "loan_type": "negocio",
    "payment_type": "mensual",
    "reason": "Business investment",
    "guarantee_type": "negocio",
    "guarantee_detail": "Business assets",
    "form_purchased": true,
    "request_date": "2024-11-01"
}

### Step 15: Create an emergencia prestamo
# @name createEmergenciaPrestamo
POST {{baseUrl}}/prestamos
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "juntaId": "{{juntaId}}",
    "memberId": "{{memberId}}",
    "amount": "1000",
    "monthly_interest": "3",
    "number_of_installments": 3,
    "loan_type": "emergencia",
    "payment_type": "mensual",
    "reason": "Medical emergency",
    "guarantee_type": "personal",
    "guarantee_detail": "Personal guarantee",
    "form_purchased": true,
    "request_date": "2024-11-01"
}

### Step 16: Final verification of junta's capital
# @name verifyFinalCapital
GET {{baseUrl}}/juntas/{{juntaId2}}
Authorization: Bearer {{authToken}}
