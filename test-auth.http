@baseUrl = http://localhost:3000/api
@baseUrlProd  = https://unicas-nest-backend-production.up.railway.app/api
@authToken = {{login.response.body.access_token}}

### Important Notes:
# 1. Backend runs on http://localhost:3000
# 2. Frontend runs on http://localhost:3001
# 3. All API requests should go to http://localhost:3000/api/...
# 4. Set up:
#    - Execute "Register Admin" request first
#    - Then "Login" with email or phone to get admin token
#    - Token will be automatically used for subsequent requests

### 1. Authentication Endpoints

### Register new admin user
# @name registerAdmin
POST {{baseUrl}}/auth/register/admin
Content-Type: application/json

{
    "email": "admin@admin.com",
    "password": "123123",
    "username": "admin1",
    "phone_number": "912345678"
}

### Register new regular user with email (optional)
# @name register
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
    "email": "test@example.com",
    "password": "password123",
    "username": "testuser",
    "phone_number": "+1234567890"
}

### Register new user with phone only
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
    "username": "001",
    "password": "password123",
    "phone_number": "987654322"
}

### Login with email
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "admin@example.com",
    "password": "admin123"
}

### Login with phone number
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "phone_number": "999999999",
    "password": "admin123"
}

### Get user profile
GET {{baseUrl}}/auth/profile
Authorization: Bearer {{authToken}}

### 2. Public Endpoints

### Health check
GET {{baseUrlProd}}/health

### 3. User Management (Admin)

### Get all users (Admin only)
GET {{baseUrl}}/users
Authorization: Bearer {{authToken}}

### Get current user profile
GET {{baseUrl}}/users/706a422e-bb86-4e97-87ed-7d9eb7c84fca
Authorization: Bearer {{authToken}}

### Update user role (Admin only)
### PUT {{baseUrl}}/users/USER_ID/role
PUT {{baseUrl}}/users/d9f974ff-5b12-45f8-a750-e012c5447b5a/role
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "role": "ADMIN"
}

### 4. Member Management

### Get member by DNI
GET {{baseUrl}}/members/dni/07877781
Authorization: Bearer {{authToken}}

### Get member prestamos by DNI
GET {{baseUrl}}/members/dni/12345678/prestamos
Authorization: Bearer {{authToken}}

### Get member pagos by DNI
GET {{baseUrl}}/members/dni/12345678/pagos
Authorization: Bearer {{authToken}}

### Get member multas by DNI
GET {{baseUrl}}/members/dni/12345678/multas
Authorization: Bearer {{authToken}}

### Get member acciones by DNI
GET {{baseUrl}}/members/dni/12345678/acciones
Authorization: Bearer {{authToken}}

### Get all members of a junta
GET {{baseUrl}}/members/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01
Authorization: Bearer {{authToken}}

### Add member to junta
POST {{baseUrl}}/members/6fe6314e-6d8b-413b-b018-562fb4f65e01/add/07877781
Authorization: Bearer {{authToken}}

### Remove member from junta
### DELETE {{baseUrl}}/members/JUNTA_ID/MEMBER_ID
DELETE {{baseUrl}}/members/6fe6314e-6d8b-413b-b018-562fb4f65e01/f8c876d1-5efd-4a51-947f-6afd6a21c458
Authorization: Bearer {{authToken}}

### 5. Junta Management

### Create a new junta
POST {{baseUrl}}/juntas
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "name": "Primera Junta",
  "description": "Junta inicial para pruebas",
  "fecha_inicio": "2024-01-01"
}

### Get all juntas
GET {{baseUrl}}/juntas
Authorization: Bearer {{authToken}}

### Get specific junta
GET {{baseUrl}}/juntas/JUNTA_ID
Authorization: Bearer {{authToken}}

### 6. Financial Management

### Get all prestamos for a Junta
GET {{baseUrl}}/prestamos/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01
Authorization: Bearer {{authToken}}

### Create a new prestamo
POST {{baseUrl}}/prestamos
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 1000,
  "description": "Préstamo inicial",
  "juntaId": "6fe6314e-6d8b-413b-b018-562fb4f65e01",
  "memberId": "23ea3265-1ab2-4d5c-a81c-35c33f9cee38"
}

### Create a new pago
POST {{baseUrl}}/prestamos/6a88f1d8-b1cd-499e-ab17-1e9278ef0ae4/pagos
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 100,
  "description": "Pago inicial"
}

### Get pagos by junta
GET {{baseUrl}}/prestamos/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01/pagos
Authorization: Bearer {{authToken}}

### Create a new multa
POST {{baseUrl}}/multas
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 100,
  "description": "Tardanza a reunión",
  "juntaId": "JUNTA_ID",
  "memberId": "MEMBER_ID"
}

### Get multas for a junta
GET {{baseUrl}}/multas/junta/JUNTA_ID
Authorization: Bearer {{authToken}}

### Create a new accion
POST {{baseUrl}}/acciones
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "type": "COMPRA",
  "amount": 1000,
  "description": "Compra de acciones",
  "juntaId": "6fe6314e-6d8b-413b-b018-562fb4f65e01",
  "memberId": "23ea3265-1ab2-4d5c-a81c-35c33f9cee38"
}

### Get acciones for a junta
GET {{baseUrl}}/acciones/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01
Authorization: Bearer {{authToken}}

### Create capital social
POST {{baseUrl}}/capital/social
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "amount": 10000,
  "juntaId": "3f06e453-cf25-4ad0-aece-a9184b1c778b"
}

### Get capital social for a junta
GET {{baseUrl}}/capital/social/junta/3f06e453-cf25-4ad0-aece-a9184b1c778b
Authorization: Bearer {{authToken}}

### Testing Instructions:

1. Authentication Setup:
   - First, execute the "Register Admin" request to create an admin user
   - Then execute either "Login with email" or "Login with phone number"
   - The auth token will be automatically captured and used for subsequent requests
   - You can also register regular users with or without email

2. Test user creation and roles:
   - Use the admin token to access protected routes
   - Test role-based access control
   - Update user roles as needed

3. Test junta creation:
   - Create a new junta
   - Note the junta ID from the response
   - Use this ID in other requests that need JUNTA_ID

4. Test member operations:
   - Add members to the junta
   - Test member-specific endpoints
   - Test financial operations

Note: Replace placeholders:
- USER_ID: Use actual user ID
- JUNTA_ID: Use actual junta ID
- MEMBER_ID: Use actual member ID
