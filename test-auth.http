@baseUrl = http://localhost:3000/api
@dev_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyXzJudDVwSm1CUDNkUTBxYXZsWGJSQUdMSVl4bSIsImlzcyI6Imh0dHBzOi8vbmF0aXZlLW11dHQtODAuY2xlcmsuYWNjb3VudHMuZGV2IiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDozMDAxIiwiZXhwIjoxNzI5ODg1Njc2LCJpYXQiOjE3Mjk4ODIwNzYsImF6cCI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMSJ9.i5F6rGaJShF7lFNAZyVgCw0U9C3p6KOezBOnWeGQsbQ

### Important Notes:
# 1. Backend runs on http://localhost:3000
# 2. Frontend runs on http://localhost:3001
# 3. All API requests should go to http://localhost:3000/api/...
# 4. Set up:
#    - Execute "Get development token" request
#    - Copy token from response
#    - Replace @dev_token value above with the copied token

### 1. Public Endpoints (no auth required)

### Health check
GET {{baseUrl}}/health

### Get development token
# @name getDevToken
GET {{baseUrl}}/health/dev-token

### 2. User Management (Admin)

### Get all users (Admin only)
GET {{baseUrl}}/users
Authorization: Bearer {{dev_token}}

### Get current user profile
GET {{baseUrl}}/users/me
Authorization: Bearer {{dev_token}}

### Create a new user
POST {{baseUrl}}/users
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "document_type": "DNI",
  "document_number": "12345678",
  "first_name": "John",
  "last_name": "Doe",
  "birth_date": "1990-01-01",
  "province": "Lima",
  "district": "Miraflores",
  "address": "123 Main St",
  "is_superuser": false
}

### Update user role (Admin only)
PUT {{baseUrl}}/users/USER_ID/role
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "role": "FACILITATOR"
}

### 3. Member Management

### Get member by DNI
GET {{baseUrl}}/members/dni/12345678
Authorization: Bearer {{dev_token}}

### Get member prestamos by DNI
GET {{baseUrl}}/members/dni/12345678/prestamos
Authorization: Bearer {{dev_token}}

### Get member pagos by DNI
GET {{baseUrl}}/members/dni/12345678/pagos
Authorization: Bearer {{dev_token}}

### Get member multas by DNI
GET {{baseUrl}}/members/dni/12345678/multas
Authorization: Bearer {{dev_token}}

### Get member acciones by DNI
GET {{baseUrl}}/members/dni/12345678/acciones
Authorization: Bearer {{dev_token}}

### Get all members of a junta
GET {{baseUrl}}/members/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01
Authorization: Bearer {{dev_token}}

### Add member to junta
POST {{baseUrl}}/members/JUNTA_ID/add/12345678
Authorization: Bearer {{dev_token}}

### Remove member from junta
DELETE {{baseUrl}}/members/JUNTA_ID/MEMBER_ID
Authorization: Bearer {{dev_token}}

### 4. Junta Management

### Create a new junta
POST {{baseUrl}}/juntas
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "name": "Primera Junta",
  "description": "Junta inicial para pruebas",
  "fecha_inicio": "2024-01-01"
}

### Get all juntas
GET {{baseUrl}}/juntas
Authorization: Bearer {{dev_token}}

### Get specific junta
GET {{baseUrl}}/juntas/JUNTA_ID
Authorization: Bearer {{dev_token}}





### 5. Financial Management

### Get all prestamos for a Junta
### GET {{baseUrl}}/prestamos/junta/JUNTA_ID
GET {{baseUrl}}/prestamos/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01
Authorization: Bearer {{dev_token}}

### Create a new prestamo
### POST {{baseUrl}}/prestamos
POST {{baseUrl}}/prestamos
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "amount": 1000,
  "description": "Préstamo inicial",
  "juntaId": "6fe6314e-6d8b-413b-b018-562fb4f65e01",
  "memberId": "23ea3265-1ab2-4d5c-a81c-35c33f9cee38"
}

### Create a new pago
### POST {{baseUrl}}/prestamos/PRESTAMO_ID/pagos
POST {{baseUrl}}/prestamos/6a88f1d8-b1cd-499e-ab17-1e9278ef0ae4/pagos
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "amount": 100,
  "description": "Pago inicial"
}

### Get pagos by junta
### GET {{baseUrl}}/prestamos/junta/JUNTA_ID/pagos
GET {{baseUrl}}/prestamos/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01/pagos
Authorization: Bearer {{dev_token}}

### Create a new multa
POST {{baseUrl}}/multas
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "amount": 100,
  "description": "Tardanza a reunión",
  "juntaId": "JUNTA_ID",
  "memberId": "MEMBER_ID"
}

### Get multas for a junta
GET {{baseUrl}}/multas/junta/JUNTA_ID
Authorization: Bearer {{dev_token}}

### Create a new accion
POST {{baseUrl}}/acciones
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "type": "COMPRA",
  "amount": 1000,
  "description": "Compra de acciones",
  "juntaId": "6fe6314e-6d8b-413b-b018-562fb4f65e01",
  "memberId": "23ea3265-1ab2-4d5c-a81c-35c33f9cee38"
}

### Get acciones for a junta
GET {{baseUrl}}/acciones/junta/6fe6314e-6d8b-413b-b018-562fb4f65e01
Authorization: Bearer {{dev_token}}

### Create capital social
POST {{baseUrl}}/capital/social
Authorization: Bearer {{dev_token}}
Content-Type: application/json

{
  "amount": 10000,
  "juntaId": "JUNTA_ID"
}

### Get capital social for a junta
GET {{baseUrl}}/capital/social/junta/JUNTA_ID
Authorization: Bearer {{dev_token}}

### Testing Instructions:

1. Get development token:
   - Execute the "Get development token" request
   - Copy the token from the response
   - Replace @dev_token value at the top of this file

2. Test user creation:
   - Execute the "Create a new user" request
   - Note the user ID from the response
   - Use this ID in other requests that need USER_ID

3. Test junta creation:
   - Execute the "Create a new junta" request
   - Note the junta ID from the response
   - Use this ID in other requests that need JUNTA_ID

4. Test member operations:
   - Add members to the junta
   - Test member-specific endpoints
   - Test financial operations

Note: Replace placeholders:
- USER_ID: Use actual user ID
- JUNTA_ID: Use actual junta ID
- MEMBER_ID: Use actual member ID
